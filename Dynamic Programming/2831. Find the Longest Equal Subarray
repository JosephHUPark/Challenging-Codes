class Solution {
public:
    int longestEqualSubarray(vector<int>& nums, int k) {
        map<int, vector<int>>m;
        for (int i = 0; i < nums.size(); i++) m[nums[i]].push_back(i);
        
        int ans = 0;
        for (auto &i : m) {
            int trail = 0;
            int used = 0;
            for (int j = 0; j < i.second.size(); j++) {
                int curr = i.second[j];
                if (j > 0) used += (curr - i.second[j-1] - 1);
                while (used > k) {
                    int diff = i.second[trail + 1] - i.second[trail] - 1;
                    trail++;
                    used -= diff;
                }
                int get = j - trail + 1;
                ans = max(ans, get);
            }
        }
        return ans;
    }
};
